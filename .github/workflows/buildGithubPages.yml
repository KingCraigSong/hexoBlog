# 该workflow的名称，可以随意填写
name: Build And Deploy To Github Pages

# workflow的触发事件，这里代表main分支的push事件触发
on:
  push:
    branches:
      - master
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1 # If you're using actions/checkout@v2 you must set persist-credentials to false in most cases for the deployment to work correctly.
        with:
          persist-credentials: false

      - name: Install Build anf Compress 🔧 # This example project is built using npm and outputs the result to the 'build' folder. Replace with the commands required to build your project, or remove this step entirely if your site is pre-built.
        run: |
          npm install
          npm run build
          tar -zcvf blog.tar.gz ./build

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: build # The folder the action should deploy.
          CLEAN: true # Automatically remove deleted files from the deploy branch

      - name: Copy single file to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: /home/runner/work/hexoBlog/hexoBlog/blog.tar.gz
          remote: /docker-compose/nginx/html/blog.tar.gz
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.USER }}
          privateKey: ${{ secrets.PRIVATE_KEY }}
          rmRemote: true

      - name: deploy to tencent
        uses: cross-the-world/ssh-pipeline@master
        env:
          WELCOME: "ssh pipeline"
        with:
          host: ${{ secrets.SERVER_IP }}
          user: ${{ secrets.USER }}
          key: ${{ secrets.PRIVATE_KEY }}
          connect_timeout: 10s
          script: |
            rm -rf /docker-compose/nginx/html/blog
            tar -zxvf /docker-compose/nginx/html/blog.tar.gz -C /docker-compose/nginx/html/blog

            